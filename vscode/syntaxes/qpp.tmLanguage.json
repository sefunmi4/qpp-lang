{
  "scopeName": "source.qpp",
  "patterns": [
    {"include": "#comments"},
    {"include": "#keywords"},
    {"include": "#types"},
    {"include": "#functions"},
    {"include": "#constants"},
    {"include": "#numbers"},
    {"include": "#operators"}
  ],
  "repository": {
    "comments": {
      "patterns": [
        {"name": "comment.line.double-slash.qpp", "begin": "//", "beginCaptures": {"0": {"name": "punctuation.definition.comment.qpp"}}, "end": "\n"},
        {"name": "comment.block.qpp", "begin": "/\\*", "beginCaptures": {"0": {"name": "punctuation.definition.comment.begin.qpp"}}, "end": "\\*/"}
      ]
    },
    "keywords": {
      "patterns": [
        {"name": "keyword.control.qpp", "match": "\\b(task|qalloc|measure|if|else|return)\\b"}
      ]
    },
    "types": {
      "patterns": [
        {"name": "storage.type.qpp", "match": "\\b(qbit|cbit|qregister|cregister|int|float)\\b"}
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.qpp",
          "match": "\\b(X|H|CX|CZ|RY|RX|RZ|U|swap|reset)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.qpp",
          "match": "\\b(true|false|null)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.qpp",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.qpp",
          "match": "[=+\\-*/%<>!&|]+"
        }
      ]
    }
  }
}
